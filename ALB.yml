AWSTemplateFormatVersion: '2010-09-09'
Description: Application Loadbalancer.

Parameters:
  VPC:
    Type: String
    Default: 'ALB-VPC'
  SUBNETS:
    Type: String
    Default: 'ALB-Subnets'
  SecurityGroup:
    Type: String
    Default: 'ALB-SG'
  WebServers:
    Type: String
    Default: 'ALB-EC2Instances'

Resources:
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue:
          !Sub PublicSub-01
      - Fn::ImportValue:
          !Sub PublicSub-02
      Name: ALB01
      SecurityGroups:
      - Fn::ImportValue:
          !Sub WebServer-SG
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: ALBTargetGroup
      LoadBalancerArn:
        Ref: ApplicationLoadBalancer
      Port: '80'
      Protocol: HTTP
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          !Sub VPCID
      TargetGroupAttributes:
      - Key: stickiness.enabled
        Value: 'true'
      - Key: stickiness.type
        Value: lb_cookie
      - Key: stickiness.lb_cookie.duration_seconds
        Value: '30'
      Targets:
      - Id:
          Fn::ImportValue:
            !Sub WebserInstance-01
        Port: 80
      - Id:
          Fn::ImportValue:
            !Sub WebserInstance-02
        Port: 80

Outputs:
  ApplicationLoadBalancer:
    Description: ALB output value
    Value:
      Ref: ApplicationLoadBalancer
    Export:
      Name:
        !Sub "${AWS::StackName}-ApplicationLoadBalancer"